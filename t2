#!/bin/bash

source /home/eth/eth2/t1

function cc1 { local f=$(basename $1);sex "cp $1 $f.sav";cmw $f.sav 644 eth;sed  -e "$2" $f.sav > $f.new;sex "cp $f.new $1"; }                                # edit             file
function cc2 { local f=$(basename $1);cp $1 $f.sav;cp $1 $f.new            ;echo -e "$2"       >> $f.new;sex "cp $f.new $1"; }                                # add lines to end file
function cc3 { local f=$(basename $1);cp $1 $f.sav;sed "$2" $1 > $f.new    ;echo -e "$3"       >> $f.new;sex "cp $f.new $1"; }                                # add lines to pos file
function cc4 { local f=$(basename $1);cp $1 $f.sav 2>${p[3]}               ;echo -e "$2"        > $f.new;sex "cp $f.new $1"; }                                # replace lines of file

[[ -x ${p[9]}/eth2/t ]] || ln -s ${p[9]}/eth2/t6 ${p[9]}/eth2/t                                                                                               # link base commands
if [[ $(pex 'ufw status'|grep -i inactive) ]];then
  swu 'INIT FIREWALL';sex 'ufw default deny incoming';sex 'ufw default allow outgoing'                                                                        # base ufw
  pde 22/tcp ossh;idi 192.168.8.0/24 224.0.0.1 multicast                                                                                                      # deny  ssh/multicasting
  [[ $cunm = $znm1 ]] && { ple 2021/tcp nssh; }                                                                                                               # limit ssh
  [[ $cunm = $znm2 ]] && { ple 2022/tcp nssh;pai 123/udp 192.168.8.0/24 ntp; }                                                                                # limit ssh;allow ntp
  [[ $cunm = $znm3 ]] && { ple 2023/tcp nssh; }                                                                                                               # limit ssh
  [[ $cunm = $znm4 ]] && { ple 2024/tcp nssh; }                                                                                                               # limit ssh
  sex 'ufw reload';yex 'ufw enable'                                                                                                                           # reload/enable
else
  cex 'ufw status numbered'                                                                                                                                   # show
fi
[[ -f $(pjp 4 70).service || -f $(pjp 4 71).service || -f $(pjp 4 73).service ]] && exit                                                                      # ec/cl instalados -> exit
swu 'UPDATE LINUX'       ;t4update linux
swu 'ROOTKIT SCANNER'    ;sex 'apt install python3-pip net-tools lm-sensors chkrootkit bind9 bind9utils apt-listchanges landscape-common -y';cex 'chkrootkit'
swu 'UNATTENDED UPGRADES';cex 'apt install unattended-upgrades update-notifier-common -y'
swu 'LINUX CONFIGS'
if [[ $cunm = $znm2 ]];then
  cex "${p[67]} set-ntp no"                                                                                                                                   # use ntp       (sophisticated)
  cex 'apt install apt-transport-https curl ntp -y'                                                                                                           # install dependencies & ntp
  cc1 ${p[30]} "${p[49]}"                                     ;cmw ${p[30]} 644 root                                                                          # ntp config for time synchronization
  sex 'add-apt-repository -y ppa:transmissionbt/ppa'                                                                                                          # add apt source for transmission
  echo deb https://downloads.plex.tv/repo/deb public main | sudo tee /etc/apt/sources.list.d/plexmediaserver.list                                             # add apt source for plex
  curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -;sex 'apt update'                                                                 # add apt key    for plex
  cex 'apt install nginx plexmediaserver transmission-cli transmission-common transmission-daemon -y';sex "usermod -a -G debian-transmission eu"              # install nginx/plex/transmission
  cc4 ${p[32]} "${p[81]}"                                     ;cmw ${p[32]} 644 root               ;sex "${p[60]} reload ${p[80]}"                            # nginx config for plex
  cc1 ${p[33]} "${p[52]}"                                     ;cmw ${p[33]} 600 debian-transmission;sex "${p[60]} reload ${p[72]}"                            # transmission config
else
  cex "${p[67]} set-ntp on"                                                                                                                                   # use timesyncd (lightweight)
fi
if [[ $cust = hrv ]];then
  sex "${p[67]} set-timezone Europe/Lisbon"
  cc1 ${p[19]} "${p[40]}"                                                                                                                                     # my      time servers
  cc1 ${p[20]} "${p[41]}"                                     ;cmw ${p[20]} 644 root                                                                          # motd-news disable
else
  sex "${p[67]} set-timezone Europe/Berlin"
  cc1 ${p[19]} "${p[53]}"                                                                                                                                     # general time servers
fi                                                            ;cmw ${p[19]} 644 root                                                                          # timesyncd cmod
cc4 ${p[21]} "${p[56]}"                                       ;cmw ${p[21]} 644 root                                                                          # new netplan
cc1 ${p[22]} "${p[43]}"                                       ;cmw ${p[22]} 644 root                                                                          # unattended-upgrades
cc1 ${p[23]} "${p[44]}"               ;cc2 ${p[23]} "${p[45]}";cmw ${p[23]} 755 root                                                                          # header add my motd
cc1 ${p[24]} "${p[44]}"                                       ;cmw ${p[24]} 755 root                                                                          # help-text delete
cc1 ${p[25]} "${p[46]}"                                       ;cmw ${p[25]} 755 root                                                                          # grub timeout
cc1 ${p[26]} "s%^ *${p[1]}%# ${p[1]}%";cc2 ${p[26]} "${p[54]}";cmw ${p[26]} 644 root                                                                          # new logrotate add
cc3 ${p[28]} "${p[48]}" "${p[55]}"                            ;cmw ${p[28]} 644 root bind                                                                     # named my options
cc1 ${p[29]} "${p[42]}"                                       ;cmw ${p[29]} 644 root                                                                          # use only ipv4
cc1 ${p[34]} "${p[83]}"                                       ;cmw ${p[34]} 644 root                                                                          # hosts config
cc4 ${p[35]} "${p[82]}"                                       ;cmw ${p[35]} 644 root                                                                          # ssh config
[[ -x ${p[27]} ]] && sex "chmod -x ${p[27]}"                                                                                                                  # motd overlayroot unexecute
cex 'sudo update-grub';t6 dmr;t6 nrs;t6 trs;t6 sea                                                                                                            # daemon-reload & netplan/DNS/time restart
sudo dpkg-reconfigure -plow unattended-upgrades
[[ $cunm = $znm1 || $cunm = $znm4 || $cunm = $vnm1 ]] || exit                                                                                                 # ec here
swu 'INSTALAR GETH';sex 'add-apt-repository -y ppa:ethereum/ethereum';sex 'apt update -y';cex 'apt install -y software-properties-common ethereum'            # install execution client
sex "mkdir -p ${p[18]}";sau eth1;cmw ${p[18]} 755 $user                                                                                                       # create dir & user for ec
maxp=50    # default
pp2p=30303 # default
cat <<-EOF > ${p[70]}.service
[Unit]
Description=geth service
Wants=network-online.target
After=network-online.target

[Service]
User=$user
Group=$user
Restart=always
RestartSec=10
ExecStart=${p[8]}/geth$(nwf) --datadir ${p[18]} --port $pp2p --http --http.addr $zip1 --maxpeers $maxp --authrpc.addr $zip1 --authrpc.jwtsecret ${p[18]}/geth/jwt
ExecStopPost=${p[9]}/eth2/t8mail GETHSTP \$SERVICE_RESULT \$EXIT_CODE \$EXIT_STATUS

[Install]
WantedBy=multi-user.target
EOF
sex "mv ${p[70]}.service $(pjp 4 70).service";cmw $(pjp 4 70).service 644

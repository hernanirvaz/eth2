#!/bin/bash

source /home/eth/eth2/t1

function cc1 { local f=$(basename $1);sex "cp $1 $f.sav";cmw $f.sav 644 eth      ;sed  -E "$2" $f.sav > $f.new;sex "cp $f.new $1"; }                          # edit             file
function cc2 { local f=$(basename $1);sex "cp $1 $f.sav";cp $1 $f.new            ;echo -e "$2"       >> $f.new;sex "cp $f.new $1"; }                          # add lines to end file
function cc3 { local f=$(basename $1);sex "cp $1 $f.sav";sed "$2" $f.sav > $f.new;echo -e "$3"       >> $f.new;sex "cp $f.new $1"; }                          # add lines to pos file
function cc4 { local f=$(basename $1);sex "cp $1 $f.sav"                         ;echo -e "$2"        > $f.new;sex "cp $f.new $1"; }                          # replace lines of file

[[ -x $p02/eth2/t ]] || ln -s $p02/eth2/t6 $p02/eth2/t                                                                                                        # link base commands
if [[ $(pex 'ufw status'|grep -i inactive) ]];then
  swu 'INIT FIREWALL';sex 'ufw default deny incoming';sex 'ufw default allow outgoing'                                                                        # base ufw
  pde 22/tcp ossh
  [[ $cunm = $vnm1 || $cunm = $vnm2 ]] && { ple 2020/tcp nssh; }                                                                                              # limit ssh
  [[ $cunm = $znm1 ]] && { ple 2021/tcp nssh;pai 123/udp 192.168.8.0/24 ntp; }                                                                                # limit ssh;allow ntp
  [[ $cunm = $znm2 ]] && { ple 2022/tcp nssh;pai 123/udp 192.168.8.0/24 ntp; }                                                                                # limit ssh;allow ntp
  [[ $cunm = $znm3 ]] && { ple 2023/tcp nssh; }                                                                                                               # limit ssh
  [[ $cunm = $znm4 ]] && { ple 2024/tcp nssh; }                                                                                                               # limit ssh
  [[ $cunm = $inm5 ]] && { ple 2025/tcp nssh; }                                                                                                               # limit ssh
  [[ $cunm = $inm6 ]] && { ple 2026/tcp nssh; }                                                                                                               # limit ssh
  sex 'ufw reload';yex 'ufw enable'                                                                                                                           # reload/enable
else
  cex 'ufw status numbered'                                                                                                                                   # show
fi
[[ -f $p04/$s10.service || -f $p04/$s11.service || -f $p04/$s12.service || -f $p04/$s13.service ]] && exit                                                    # ec/cl instalados -> exit
swu 'UPDATE LINUX'       ;t4 linux
swu 'ADDITIONAL LINUX'   ;sex 'apt install python3-pip net-tools apt-listchanges landscape-common software-properties-common smartmontools curl -y'
swu 'UNATTENDED UPGRADES';cex 'apt install unattended-upgrades update-notifier-common -y'
swu 'LINUX CONFIG'
if [[ $cunm = $znm2 ]];then
  swu 'PLEX SERVER'        ;sex 'apt install dirmngr ca-certificates apt-transport-https -y'
  echo deb https://downloads.plex.tv/repo/deb public main | sudo tee /etc/apt/sources.list.d/plexmediaserver.list                                             # add apt source for plex
  curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -;sex 'apt update'                                                                 # add apt key    for plex
  cex 'apt install nginx plexmediaserver -y'                                                                                                                  # instal nginx/plex
  if [[ ! -d $p60 ]];then sex "mkdir -p $p60";cmw $p60 775 plex;fi;cc4 $p32 "$s42"                ;cmw $p32 644 root;sex "$s00 reload $s22"                   # config nginx/plex
  t6 xpd;t6 xea                                                                                                                                               # enable nginx/plex
  swu 'TRANSMISSION SERVER';cex 'apt install transmission-cli transmission-common transmission-daemon -y';sex "usermod -a -G $s51 eu"                         # instal transmission
  if [[ ! -d $p59 ]];then sex "mkdir -p $p59";cmw $p59 775 $s51;fi;cc1 $p33 "$e24";cc1 $p34 "$e25";cmw $p33 600 $s51;sex "$s00 reload $s15"                   # config transmission
  t6 rpd;t6 rea                                                                                                                                               # enable transmission
fi
if [[ $cunm = $znm1 || $cunm = $znm2 ]];then
  sex "$s07 set-ntp no"                                                                                                                                       # use ntp (sophisticated)
  sex 'apt install ntp bind9 bind9utils -y'                                                                                                                   # install dependencies & ntp & bind
  cc1 $p31 "$e08"              ;cmw $p31 644 root;nex "$s06 ntp"                                                                                              # ntp config for time synchronization
  cc3 $p29 "$e07" "$s40"       ;cmw $p29 644 root bind                                                                                                        # named my options
  cc1 $p30 "$e02"              ;cmw $p30 644 root                                                                                                             # use only ipv4
  t6 spd;t6 sea;nex "$s02 systemd-resolved";nex "$s03 systemd-resolved"                                                                                       # DNS stop & start
else
  sex "$s07 set-ntp yes"                                                                                                                                      # use timesyncd (lightweight)
fi
if [[ $cust = hrv ]];then
  swu 'ROOTKIT SCANNER';sex 'apt install lm-sensors chkrootkit -y';cex 'chkrootkit'
  sex "$s07 set-timezone Europe/Lisbon"
  cc1 $p20 "$e00"                                                                                                                                             # my time servers
  cc1 $p21 "$e01"              ;cmw $p21 644 root                                                                                                             # motd-news disable
  sex "rm -f $(dirname $p22)/*.yaml";cc4 $p22 "$s41";cmw $p22 600 root                                                                                        # new netplan
  cc1 $p26 "$e06"              ;cmw $p26 755 root                                                                                                             # grub timeout
  cc1 $p48 "$e27"              ;cmw $p48 644 root                                                                                                             # grub no PCIe active state power management
  cc1 $p67 "$e17"              ;cmw $p67 644 root                                                                                                             # hosts config
  cc4 $p35 "$s43"              ;cmw $p35 644 root                                                                                                             # ssh config
  cc1 $p65 "$e69"              ;cmw $p65 600 root                                                                                                             # ssh config
  cc1 $p37 "$e23"              ;cmw $p37 644 root                                                                                                             # no swap - bad for IOPS
  nex 'update-grub'
else
  sex "$s07 set-timezone Europe/Berlin"
  cc1 $p20 "$e13"                                                                                                                                             # general time servers
  nex "mv -f /etc/motd $p02/motd.sav"                                                                                                                         # no contabo info
fi                             ;cmw $p20 644 root;hrs                                                                                                         # timesyncd cmod & restart
cc1 $p23 "$e03"                ;cmw $p23 644 root                                                                                                             # unattended-upgrades base
cc1 $p51 "$e28"                ;cmw $p51 644 root                                                                                                             # unattended-upgrades period
cc1 $p24 "$e04";cc2 $p24 "$s39";cmw $p24 755 root                                                                                                             # header add my motd
cc1 $p25 "$e04"                ;cmw $p25 755 root                                                                                                             # help-text delete
cc1 $p27 "$e53";cc2 $p27 "$s38";cmw $p27 644 root                                                                                                             # new logrotate add
[[ -x $p28 ]] && sex "chmod -x $p28"                                                                                                                          # motd overlayroot unexecute
t6 uur                                                                                                                                                        # unattended-upgrades conf
swn 'sudo netplan apply'
swn 'AND reboot'

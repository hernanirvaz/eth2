#!/bin/bash

i="\n\e[5m"
f="\e[25m\n"

meeu="$(whoami)"
user="eth2"
blkc="--medalla"
plib="/var/lib/prometheus"
petc="/etc/prometheus"
verp="2.22.1" # prometheus
vern="1.0.1"  # node_exporter

echo -e "${i}CONFIGURE PROMETHEUS${f}"
echo -e "Confirmar ultimas versoes: prometheus ($verp), node_exporter ($vern) em:\nhttps://prometheus.io/download"

if [ -f /etc/systemd/system/prometheus.service ]; then [ "$(sudo systemctl status prometheus|grep -i inactive)" ] || sudo systemctl stop prometheus;fi
if [ -f /etc/systemd/system/node.service ]; then [ "$(sudo systemctl status node|grep -i inactive)" ] || sudo systemctl stop node;fi
if [ -f /etc/systemd/system/grafana-server.service ]; then [ "$(sudo systemctl status grafana-server|grep -i inactive)" ] || sudo systemctl stop grafana-server;fi

cd ~
if ! id $user &>/dev/null;then sudo useradd --no-create-home --shell /bin/false $user;fi
sudo mkdir -p $petc
sudo mkdir -p $plib
sudo chown -R $user:$user $petc
sudo chown -R $user:$user $plib

curl -LO https://github.com/prometheus/prometheus/releases/download/v$verp/prometheus-$verp.linux-amd64.tar.gz
tar xvf prometheus-$verp.linux-amd64.tar.gz 
sudo cp prometheus-$verp.linux-amd64/prometheus /usr/local/bin
sudo cp prometheus-$verp.linux-amd64/promtool /usr/local/bin
sudo cp -r prometheus-$verp.linux-amd64/consoles $petc
sudo cp -r prometheus-$verp.linux-amd64/console_libraries $petc
sudo rm -rf prometheus-$verp.linux-amd64.tar.gz prometheus-$verp.linux-amd64

sudo chown -R $user:$user /usr/local/bin/prometheus
sudo chown -R $user:$user /usr/local/bin/promtool 
sudo chown -R $user:$user $petc/consoles
sudo chown -R $user:$user $petc/console_libraries

sudo cat <<-EOF > prometheus.yml
  global:
    scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
    evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
    # scrape_timeout is set to the global default (10s).
  # Alertmanager configuration
  alerting:
    alertmanagers:
    - static_configs:
      - targets:
        # - alertmanager:9093
  # Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
  rule_files:
    # - "first_rules.yml"
    # - "second_rules.yml"
  # A scrape configuration containing exactly one endpoint to scrape:
  # Here it's Prometheus itself.
  scrape_configs:
    - job_name: 'nodes'
      metrics_path: /metrics
      static_configs:
        - targets: ['localhost:5054']
    - job_name: 'node'
      static_configs:
        - targets: ['localhost:9100']
EOF
sudo cat <<-EOF > prometheus.service
[Unit]
Description=Prometheus
Wants=network-online.target
After=network-online.target

[Service]
Type=simple
User=$user
Group=$user
Restart=always
RestartSec=5
ExecStart=/usr/local/bin/prometheus --config.file $petc/prometheus.yml --storage.tsdb.path $plib/ --web.console.templates=$petc/consoles --web.console.libraries=$petc/console_libraries

[Install]
WantedBy=multi-user.target
EOF
sudo mv prometheus.service /etc/systemd/system/prometheus.service
sudo mv prometheus.yml $petc/prometheus.yml
sudo chown $user:$user $petc/prometheus.yml

echo -e "${i}CONFIGURE NODE${f}"

curl -LO https://github.com/prometheus/node_exporter/releases/download/v$vern/node_exporter-$vern.linux-amd64.tar.gz
tar xvf node_exporter-$vern.linux-amd64.tar.gz 
sudo cp node_exporter-$vern.linux-amd64/node_exporter /usr/local/bin
sudo chown -R $user:$user /usr/local/bin/node_exporter
sudo rm -rf node_exporter-$vern.linux-amd64.tar.gz node_exporter-$vern.linux-amd64

sudo cat <<-EOF > node.service
[Unit]
Description=Node Exporter
Wants=network-online.target
After=network-online.target

[Service]
User=$user
Group=$user
Type=simple
ExecStart=/usr/local/bin/node_exporter

[Install]
WantedBy=multi-user.target
EOF
sudo mv node.service /etc/systemd/system/node.service

echo -e "${i}CONFIGURE GRAFANA${f}"

wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
sudo add-apt-repository "deb https://packages.grafana.com/oss/deb stable main"
sudo apt update
apt-cache policy grafana
sudo apt install -y grafana
sudo ufw allow 3000/tcp comment 'Grafana'
# ONLY FOR DIRECT ACESS TO PROMETHEUS - GRAFANA USES DATASOURCE WITH localhost
# sudo ufw deny 9090/tcp comment 'Prometheus'
sudo ufw reload

sudo systemctl daemon-reload
sudo systemctl start prometheus
sudo systemctl start node
sudo systemctl start grafana-server
sudo systemctl enable prometheus
sudo systemctl enable node
sudo systemctl enable grafana-server

echo -e "\nConfigure Grafana Login admin:changeme http://$(uname -n):3000\n"
echo -e "Import some dashboards from the dashboards directory in https://github.com/sigp/lighthouse-metrics"
echo -e "In the Grafana UI, go to Dashboards -> Manage -> Import -> Upload .json file."
echo -e "The Summary.json dashboard is a good place to start.\n"


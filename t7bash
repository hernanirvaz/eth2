#!/bin/bash

source /home/eth/eth2/t1

#function crg { curl -s -H "Content-Type: application/json" -X GET "$1" | jq . ; }
function crg { curl -sH "Content-Type: application/json" -X GET "$1"; }
#function crp { curl -sH "Content-Type: application/json" -X POST -d "[11766,11767,11770,11771,11772,11773,11774,11775,11776,11777,11778,11779,11780,11782,11783,11784,11786,11788,449113,449114,449115,449116,590905,590906,590907]" "$1"; }
function crp { curl -sH "Content-Type: application/json" -X POST -d "[11766,11767]" "$1"; }

# Define the main function
function main {
  local head_slot=$(crg "${s31}beacon/headers/head"|jq -r '.data.header.message.slot')
  local epoch=$((head_slot / 32))
  local ced=$(crp "${s31}validator/duties/attester/${epoch}" | jq -r '.data')
  local ned=$(crp "${s31}validator/duties/attester/$((epoch + 1))" | jq -r '.data')
  echo ${ced} ${ned}
  #local attestation_duties=$(echo "${ced}${ned}" | jq -s '[group_by(.slot | tonumber)[] | {(.[0].slot | tonumber): [.[].validator_index | tonumber]}] | add')
  local attestation_duties=$(echo "${ced}${ned}" | jq '[group_by(.slot | tonumber)[] | {(.[0].slot): [.[].validator_index | tonumber]}] | add')
  echo $attestation_duties
  echo "$(((epoch+2)*32))"
  attestation_duties=$(echo "${attestation_duties}" | jq --argjson slot "$(((epoch+2)*32))" '.[$slot] = []')

  local prev_end_time=$(date +%s)
  local longest_gap=0
  local gap_time_range=(0 0)

  for slot in $(echo "${attestation_duties}" | jq -r 'keys | .[]'); do
    local slot_start=$(date -d "@$((1606824023 + slot * 12))")
    local slot_end=$(date -d "@$((1606824023 + (slot + 1) * 12))")
    local gap=$((slot_start - prev_end_time))
    if [[ -n $(echo "${attestation_duties}" | jq ".[${slot}][0]") ]]; then
      local nado=0
    else
      assert $((slot % 32)) -eq 0
    fi
    if (( gap > longest_gap )); then
      longest_gap=$gap
      gap_time_range=($prev_end_time $slot_start)
    fi
    prev_end_time=$(date -d "${slot_end}" +%s)
  done

  echo "$(date -d "@${gap_time_range[0]}" "+%H:%M:%S") $((longest_gap / 12))"
}

# Call the main function
main


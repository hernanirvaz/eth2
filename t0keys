#!/bin/bash

source /home/eth/eth2/t1

function sbn { printf $($p02/ethdo $s27 node info 2>$p03|cut -d: -f2); }
function obn { ping -qnc 1 -W 1 $zipg &>$p03; }
function srv { if [[ $cunm = $1 ]];then cd $p02;return;else swb "TEM DE ESTAR $1";return 1;fi; }
function bls {
  srv hrv-zen || return
  [[ -x $p02/ethdo     ]] || { dnv                              ; }
  [[ -x $p02/ethdo     ]] || { swb 'TEM DE TER ETHDO'    ;return; }
  [[ $(sbn) = false    ]] || { swb "TEM DE TER BN SYNCED";return; }
  [[ -f $p02/$s28.json ]] || $p02/ethdo $s27 validator credentials set --prepare-offline
  [[ -f $p02/$s28.json ]] || { swb "TEM DE TER $s28.json";return; }
  [[ -f $p02/$s29.json ]] || { if [[ $M ]];then if obn;then swb 'TEM DE ESTAR OFFLINE';else $p02/ethdo $s27 validator credentials set --offline --mnemonic="$M" --withdrawal-address=$s26;fi;else swb 'TEM DE TER M';fi; }
  [[ -f $p02/$s29.json ]] || { swb "TEM DE TER $s29.json";return; }
  [[ -f $p02/$s29.json ]] && { if obn;then echo $p02/ethdo $s27 validator credentials set;else swb 'TEM DE ESTAR ONLINE';return;fi; }
}
function sdc {
  srv hrv-zen || return
  [[ -x $p02/deposit ]] || { snv                            ; }
  [[ -x $p02/deposit ]] || { swb 'TEM DE TER DEPOSIT';return; }
  [[ -d $p19 && $(ls -A $p19 2>$p03) ]] && { swu 'CHAVES JA EXISTEM';return; }
  local v=${1:-3};local n=${2:-22};swb "GERAR $v CHAVES A PARTIR DE $n";swn "STORE($K)";swn "$M"
  if [[ $M ]];then if obn;then swb 'TEM DE ESTAR OFFLINE';else $p02/deposit existing-mnemonic --validator_start_index $n --num_validators $v --execution_address $s26;fi;else swb 'TEM DE TER M';fi
  [[ -d $p19 && $(ls -A $p19 2>$p03) ]] && { swb 'DEVE ARQUIVAR CHAVES'; }
}

[[ $1 = bls ]] && { bls; }
[[ $1 = sdc ]] && { sdc $2 $3; }

if [[ ! $1 ]];then
  m=''
  m="$m\nbls\t\tBLS withdrawal credentials"
  m="$m\nsdc [v] [n]\tStaking Deposit Cli\t\tv=chaves, n=chaves anteriores"
  swn "$m\n"
fi

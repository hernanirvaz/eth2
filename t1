#!/bin/bash

meeu=$(whoami)
cunm=$(uname -n)
cust=$(uname -n|cut -c1-3)
zip1='192.168.8.25'
zip2='192.168.8.28'
zip3='192.168.8.31'
zip4='192.168.8.34'
znm1='hrv-zotac1'
znm2='hrv-zotac2'
znm3='hrv-zotac3'
znm4='hrv-zotac4'
vip1='207.180.214.8'
vip2='173.249.42.190'
vip3='164.68.107.45'
vnm1='vmi471826.contaboserver.net'
vnm2='vmi506976.contaboserver.net'
vnm3='vmi469069.contaboserver.net'
if [[ $cust = hrv ]];then cuec=$zip1;else cuec=$vip1;fi;[[ $cunm = $znm4 ]] && cuec=$zip4

unset p
p[0]='/usr/local/bin'
p[1]='/var/log/syslog'
p[2]='/etc/prometheus'
p[3]='/dev/null'
p[4]='/etc/systemd/system'
p[5]='/var/run/reboot-required'
p[6]='/sys/bus/usb/devices/1-0:1.0/authorized'
p[7]='/sys/devices/system/cpu/intel_pstate/no_turbo'
p[8]='/usr/bin'
p[9]='/home/eth'
p[10]='/var/lib/lighthouse'
p[11]="${p[9]}/beacon.log"
p[12]="${p[9]}/bmedias.log"
p[13]="${p[9]}/geth.log"
p[14]="${p[9]}/barqivo.log"
p[15]="${p[9]}/beacon.restart"
p[16]="${p[10]}/beacon"
p[17]="${p[10]}/validators"
p[18]='/var/lib/goethereum';[[ $cunm = $znm4 ]] && p[18]='/sata/goethereum'
p[19]='/etc/systemd/timesyncd.conf'
p[20]='/etc/default/motd-news'
p[21]='/etc/netplan/00-installer-config.yaml'
p[22]='/etc/apt/apt.conf.d/50unattended-upgrades'
p[23]='/etc/update-motd.d/00-header'
p[24]='/etc/update-motd.d/10-help-text'
p[25]='/etc/grub.d/30_os-prober'
p[26]='/etc/logrotate.d/rsyslog'
p[27]='/etc/update-motd.d/97-overlayroot'
p[28]='/etc/bind/named.conf.options'
p[29]='/etc/default/named'
p[30]='/etc/ntp.conf'

p[40]=''
p[41]=''
p[42]=''
p[43]=''
p[44]=''
p[45]=''
p[46]=''
p[47]=''
p[48]=''
p[49]=''
p[50]='geth\[\|lighthouse'                                                                                                                                    # el/cl clients
p[51]='Package\|Core\|Composite\|Sensor\|temp[0-9]'                                                                                                           # temperature sensors
p[52]=''
p[53]=''

p[60]='systemctl'
p[61]="${p[60]} status"
p[62]="${p[60]} stop"
p[63]="${p[60]} start"
p[64]="${p[60]} enable"
p[65]="${p[60]} disable"
p[66]="${p[60]} restart"
p[70]='eth-geth'
p[71]='eth-beacon'
p[72]='transmission-daemon'
p[73]='eth-validator'
p[74]='prometheus'
p[75]='prometheus-node-exporter'
p[76]='grafana-server'
p[77]='systemd-timesyncd'
p[78]='named'
p[79]='systemd-resolved'
p[80]='plexmediaserver'

p[90]=""
p[91]=""
p[92]=""
p[99]='0x82f6E45b47c5C03F8D52dDDa03B3F65897Cd5AB2'

function pjp { local e="";[[ $# -ge 1 ]] && { e="${p[$1]}";shift; };until [[ $# -lt 1 ]];do e="$e/${p[$1]}";shift;done;echo "$e"; }                           # paths join
function pjw { local e="";[[ $# -ge 1 ]] && { e="${p[$1]}";shift; };until [[ $# -lt 1 ]];do e="$e ${p[$1]}";shift;done;echo "$e"; }                           # words join
function swb { echo -e "\n\e[5m${1^^}\e[25m\n"; }                                                                                                             # show flash
function swu { echo -e "${1^^}"; }                                                                                                                            # show upper
function swn { echo -e "$1"; }                                                                                                                                # show normal
function sau { user=$1;id $1 &>${p[3]} || sex "useradd --no-create-home --shell /bin/false $user"; }                                                          # system useradd
function cmw { [[ $2 ]] && sex "chmod $2 $1";[[ $3 ]] && sex "chown $3:${4:-$3} $1"; }                                                                        # chmod/chown file
function cex { swb "$1";echo $H|sudo -S $1       2>${p[3]}; }                                                                                                 # superuser-command (visible)
function nex { swn "$1";echo $H|sudo -S $1       2>${p[3]}; }                                                                                                 # superuser-command (visible)
function yex { swb "$1";echo $H|sudo -S $1 <<< y &>${p[3]}; }                                                                                                 # superuser-command (visible & yes)
function pex {          echo $H|sudo -S $1       2>${p[3]}; }                                                                                                 # superuser-command (pipe)
function sex {          echo $H|sudo -S $1       &>${p[3]}; }                                                                                                 # superuser-command (silent)
function dmr { sex "${p[60]} daemon-reload"; }                                                                                                                # daemon-reload
function dpa { nex "$(pjw 62 78)";nex "$(pjw 62 79)";nex "$(pjw 63 78)";nex "$(pjw 63 79)"; }                                                                 # DNS stop/start
function trs { if [[ $(sst ${p[77]} masked) ]];then nex "${p[66]} ntp";else nex "$(pjw 66 77)";fi; }                                                          # systemd-timesyncd/ntp restart
function nrs { nex 'netplan apply';dpa; }                                                                                                                     # netplan/DNS restart
function idi { local e="deny from $1 to $2"                       ;if [[ $4 ]];then nex "ufw $4 $e";else nex "ufw $e comment $3";fi; }                        # deny  frm ip to ip
function ide { local e="deny from $1 port ${2/\// proto }"        ;if [[ $4 ]];then nex "ufw $4 $e";else nex "ufw $e comment $3";fi; }                        # deny  frm ip/prt
function pde { local e="deny $1"                                  ;if [[ $3 ]];then nex "ufw $3 $e";else nex "ufw $e comment $2";fi; }                        # deny  prt
function pai { local e="allow from $2 to any port ${1/\// proto }";if [[ $4 ]];then nex "ufw $4 $e";else nex "ufw $e comment $3";fi; }                        # allow prt frm ip
function pae { local e="allow $1"                                 ;if [[ $3 ]];then nex "ufw $3 $e";else nex "ufw $e comment $2";fi; }                        # allow prt
function ple { local e="limit $1"                                 ;if [[ $3 ]];then nex "ufw $3 $e";else nex "ufw $e comment $2";fi; }                        # limit prt (<6 within 30s)
function nwf { [[ $B = mainnet ]] || echo " --testnet $B"; }                                                                                                  # lighthouse network flag
function lcp { [[ -x ${p[9]}/.cargo/bin/lighthouse ]] && until [[ $# -lt 1 ]];do scp ${p[9]}/.cargo/bin/lighthouse $1:~;shift;done; }                         # propagate lighthouse
function lwr {                                                                                                                                                # install   lighthouse
  [[ $cunm = $znm1 ]] && lcp ztc2 ztc3 ztc4;[[ $cunm = $vnm1 ]] && lcp vpss
  [[ -x ${p[9]}/lighthouse && ! -d ${p[9]}/lighthouse ]] && { sex "cp ${p[0]}/lighthouse ${p[0]}/lighthouse.sav";sex "mv ${p[9]}/lighthouse ${p[0]}"; }
  [[ -x ${p[0]}/lighthouse                        ]] && { cmw ${p[0]}/lighthouse 755 eth;swb 'NOVO LIGHT INSTALADO - PODE/DEVE VERIFICAR'; }
}

bpid=$($(pjw 61 71) 2>${p[3]}|sed -n 's%.*PID: *\([0-9]*\).*%\1%p')
rblk=22238623
ratt=00019000
pmis=00010000
pmat=00018800
pmah=00004500
pdly=00000500
decp=1000000000
hors=24
rate=4000
bpri=20                                                                                                                                                       # min    configured peers
bprs=10                                                                                                                                                       # step   configured peers
bprf=80                                                                                                                                                       # max    configured peers
[[ $rate -eq 0 ]] && rate=$(curl -sX GET 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=ETH&convert=EUR&CMC_PRO_API_KEY=3ae5f3df-bd71-489d-a9dd-b626995fba31'|sed 's%.*price.:\([0-9]*\.[0-9]*\).*%\1%')
